//FACTORIAL

data SEGMENT
    MSG1 DB 10,13,"ENTER THE NUMBER:$"
    FACT DW ? 
    n DB 05
data ENDS
code Segment
    ASSUME CS:CODE DS:DATA
    Start:
    MOV AX,DATA
    MOV DS,AX

    MOV CL,05
    MOV AX,0001H
    MOV BX,0001H
    AGAIN:
        MUL BX
        INC BX
        DEC CL
        JNZ AGAIN
        MOV BX,AX
        MOV FACT,AX
        MOV AH,4CH
        INT 21H
code ENDS
END start

//

LARGEST 4

DATA SEGMENT 
    ARRAY DW 8123,2222,3333,4444,7777
    COUNT DB 5
    LARGEST DW ?
ENDS DATA
 CODE SEGMENT
    ASSUME CS:CODE DS:DATA
    START:
    MOV AX,DATA
    MOV DS,AX
    MOV CL,COUNT
    LEA SI,ARRAY
    MOV BX,[SI]
    INC SI 
    INC SI
    AGAIN: CMP [SI],BX
    JL NOCHANGE
    MOV BX,[SI]
    NOCHANGE: INC SI
    INC SI
    DEC CL
    JNZ AGAIN
    MOV LARGEST,BX
    
    MOV AH,4CH
    INT 21H
    CODE ENDS
 END START
    
    //PALINDROME

    DATA SEGMENT
    MSG1 DB 10,13, 'ENTER STRING:$'
    MSG2 DB 10,13, 'PALLINDROME$'
    MSG3 DB 10,13, 'NOT PALLINDROME$'
    STR1 DB 50 DUP(0)
    DATA ENDS

CODE SEGMENT
    ASSUME CS:CODE DS:DATA
    START:
    MOV AX,DATA
    MOV DS,AX
    LEA DX,MSG1
    MOV AH,09H
    INT 21H
    LEA SI,STR1
    LEA DI,STR1  
    MOV AH,01H
    
    NEXT:
    INT 21H
    CMP AL,0DH
    JE TERMINATE
    MOV [DI],AL 
    INC DI
    JMP NEXT
    
    
    
   TERMINATE:
   MOV AL,'$'
   MOV [DI],AL    
   
   DOTHIS:
   DEC DI
   MOV AL,[SI]
   CMP [DI],AL   
   JNE NOTPAL
   INC SI
   CMP SI,DI
   JL DOTHIS  
   
   PAL:
   MOV AH,09H
   LEA DX,MSG2
   INT 21H
   JMP XX
   
   
   NOTPAL:
   MOV AH,09H   
   LEA DX,MSG3
   INT 21H 
   JMP XX
   
   XX:
   MOV AH,4CH
   INT 21H 
   CODE ENDS
END START
 
   
   
   
    // SEARCHING

    DATA SEGMENT
     ARRAY DW 12h,58H,9BH,34H,9AH
     ARRSIZE EQU 5
     MSG1 DB 10,13,'FOUND$'
     MSG2 DB 10,13,'NOT FOUND $'
     
     
    DATA ENDS
CODE SEGMENT
    ASSUME CS:CODE , DS:DATA
    START:  
    MOV AX,DATA
    MOV DS,AX
    MOV CX, ARRSIZE
    LEA SI,ARRAY
    MOV AX,9AH
    
    NEXT:
    CMP AX,[SI]
    JZ FOUND
    INC SI
   inc SI
    DEC CX
    JNZ NEXT
    
    NOTFOUND:
    LEA DX,MSG2
    MOV AH,09H
    INT 21H
    JMP EXIT
    
    FOUND:
    LEA DX,MSG1  
    MOV AH,09H
    INT 21H
    JMP EXIT

 
    
    EXIT:

   
    
    
    
    CODE ENDS
END START

//SORTING

DATA SEGMENT
    ARRAY DW 8,4,2,3
    ARRSIZE EQU 4
    DATA ENDS
CODE SEGMENT
    ASSUME CS:CODE DS:DATA
    START:
    MOV AX,DATA
    MOV DS,AX
    
    MOV BX,ARRSIZE  
    
    AGAIN:
    
    MOV CX,ARRSIZE 
    DEC CX
    LEA SI,ARRAY  
    LOOP:
    MOV AX,[SI]
    INC SI       
    INC SI
    CMP AX,[SI] 
    JG CON
    
    
    CON:
    XCHG AX,[SI]
    XCHG AX,[SI] 
    DEC SI
    DEC SI
    MOV [SI],AX
    INC SI
    INC SI
    CMP SI,ARRSIZE  
    JLE LOOP
    
      
                 
                 
           
    DO:
    DEC BX
    JNZ AGAIN  
    
   // PRINT:
    MOV AX,[SI]
    MOV AH,09H
    INT 21H 
    INC SI 
    INC SI
    JNZ PRINT     //
    
    XX:
    
    MOV AH,4CH
    INT 21H
    CODE ENDS
END START


